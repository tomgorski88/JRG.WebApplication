// <auto-generated />
using System;
using JRG.WebApplication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JRG.WebApplication.Migrations
{
    [DbContext(typeof(PracownikContext))]
    partial class PracownikContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("JRG.WebApplication.Data.Kurs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Kursy");
                });

            modelBuilder.Entity("JRG.WebApplication.Data.Pracownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DataUrodzenia")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DataZatrudnienia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notatka")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("StopienId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ZmianaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StopienId");

                    b.HasIndex("ZmianaId");

                    b.ToTable("Pracownicy");
                });

            modelBuilder.Entity("JRG.WebApplication.Data.Prawko", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Prawko");
                });

            modelBuilder.Entity("JRG.WebApplication.Data.Stopien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Stopnie");
                });

            modelBuilder.Entity("JRG.WebApplication.Data.UkonczonyKurs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("KursId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PracownikId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("KursId");

                    b.HasIndex("PracownikId");

                    b.ToTable("UkonczoneKursy");
                });

            modelBuilder.Entity("JRG.WebApplication.Data.Uprawnienie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PracownikId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PrawkoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PracownikId");

                    b.HasIndex("PrawkoId");

                    b.ToTable("Uprawnienia");
                });

            modelBuilder.Entity("JRG.WebApplication.Data.Zmiana", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Zmiany");
                });

            modelBuilder.Entity("JRG.WebApplication.Data.Pracownik", b =>
                {
                    b.HasOne("JRG.WebApplication.Data.Stopien", "Stopien")
                        .WithMany()
                        .HasForeignKey("StopienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JRG.WebApplication.Data.Zmiana", "Zmiana")
                        .WithMany()
                        .HasForeignKey("ZmianaId");

                    b.Navigation("Stopien");

                    b.Navigation("Zmiana");
                });

            modelBuilder.Entity("JRG.WebApplication.Data.UkonczonyKurs", b =>
                {
                    b.HasOne("JRG.WebApplication.Data.Kurs", "Kurs")
                        .WithMany()
                        .HasForeignKey("KursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JRG.WebApplication.Data.Pracownik", "Pracownik")
                        .WithMany("UkonczoneKursy")
                        .HasForeignKey("PracownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kurs");

                    b.Navigation("Pracownik");
                });

            modelBuilder.Entity("JRG.WebApplication.Data.Uprawnienie", b =>
                {
                    b.HasOne("JRG.WebApplication.Data.Pracownik", "pracownik")
                        .WithMany("Uprawnienia")
                        .HasForeignKey("PracownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JRG.WebApplication.Data.Prawko", "prawko")
                        .WithMany()
                        .HasForeignKey("PrawkoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pracownik");

                    b.Navigation("prawko");
                });

            modelBuilder.Entity("JRG.WebApplication.Data.Pracownik", b =>
                {
                    b.Navigation("UkonczoneKursy");

                    b.Navigation("Uprawnienia");
                });
#pragma warning restore 612, 618
        }
    }
}
